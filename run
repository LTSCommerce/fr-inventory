#!/usr/bin/env bash

# This script wraps the calls to docker compose run to fire up CLI commands within the backend container

# BASH safe error handling
set -euo pipefail

# Entering project root directory
readonly projectRootDir="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
cd $projectRootDir



function composeRunBackend(){
    local runCmd="docker compose run --rm backend "
    set -x
    $runCmd ${@}
    set +x
}

# Some new lines for readability
echo
echo

# Getting argument
readonly arg=${1:-"'not set'"}
case "$arg" in
    quickstart)
        echo "Run all Quick Start Commands"
        if [[ ! -f .env ]]; then
          cp .env-dist .env;
        fi
        $0 up && $0 i && $0 g && $0 p && $0 f
        echo "System full installed and database seeded"
        $0 ps
        ;;
    up)
        echo "Start Docker Containers"
        docker compose up -d
        ;;
    down)
        echo "Stop Docker Containers"
        docker compose down
        ;;
    destroy)
        echo "Stop Docker Containers and Remove Data"
        docker compose down -v
        ;;
    ps)
        echo "List of running Docker Containers"
        docker compose ps
        ;;
    i)
        echo "Install all packages"
        composeRunBackend yarn install
        ;;
    a)
        echo "Add package(s) - follow the call with 1 or more package names to install"
        composeRunBackend yarn add ${@:2}
        ;;
    u)
        echo "Update/Upgrade packages"
        composeRunBackend yarn upgrade
        ;;
    p)
        echo "Force update DB to match Schema"
        composeRunBackend yarn prisma db push
        ;;
    m)
        echo "Create and Run DB Migrations"
        composeRunBackend yarn prisma migrate dev
        ;;
    g)
        echo "Generate client"
        composeRunBackend yarn prisma generate
        ;;
    f)
        echo "Fill DB with Seed Data"
        composeRunBackend yarn prisma db seed
        ;;
    s)
        echo "Run Prisma Studio (NOT WORKING)"
        composeRunBackend yarn prisma studio --browser none --hostname '0.0.0.0'
        ;;
    *)
        echo "Help"
        echo
        echo "The $0 script has the following options"
        echo
        grep -Pzo '(?s)\s+?([a-z]+?)\)\s+?(?:echo ")[^"]+' "$0"  | sed -z 's/)\n        echo "/: /g' | column -s : -t
        ;;
esac

# Some new lines for readability
echo
echo